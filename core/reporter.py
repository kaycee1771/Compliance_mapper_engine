import yaml
import os
from collections import defaultdict
from core.ontology import build_master_control_ontology

def summarize_coverage(matches, ontology):
    covered = set(m["matched_control"] for m in matches)
    all_controls = set(ontology.keys())
    uncovered = all_controls - covered

    summary = {
        "total_controls": len(all_controls),
        "covered": len(covered),
        "uncovered": len(uncovered),
        "coverage_percent": round(100 * len(covered) / len(all_controls), 2),
        "uncovered_controls": sorted(list(uncovered)),
    }

    return summary

def group_matches_by_control(matches):
    grouped = defaultdict(list)
    for m in matches:
        grouped[m["matched_control"]].append(m)
    return grouped

def generate_report_file(summary, grouped_matches, ontology, out_path="output/gap_report.md"):
    os.makedirs("output", exist_ok=True)
    with open(out_path, "w", encoding="utf-8") as f:
        f.write("# Compliance Gap Report\n\n")
        f.write(f"**Total Controls:** {summary['total_controls']}\n")
        f.write(f"**Covered:** {summary['covered']} \n")
        f.write(f"**Uncovered:** {summary['uncovered']} \n")
        f.write(f"**Coverage:** {summary['coverage_percent']}%\n\n")

        f.write("## Uncovered Controls\n")
        for ctrl_id in summary["uncovered_controls"]:
            ctrl = ontology[ctrl_id]
            f.write(f"- **{ctrl_id}**: {ctrl['title']} — _{ctrl['category']}_\n")

        f.write("\n## Matched Controls\n")
        for ctrl_id, matches in grouped_matches.items():
            ctrl = ontology[ctrl_id]
            f.write(f"\n### {ctrl_id}: {ctrl['title']}\n")
            f.write(f"_{ctrl['category']} • {len(matches)} match(es)_\n\n")
            f.write(f"**Control Description:** {ctrl['description']}\n\n")
            for m in matches:
                f.write(f"- **{m['input_type']}** `{m['source']}` → _{m['text'][:100]}..._ (score: {m['similarity']})\n")
        f.write("\n---\n\n_Report generated by Compliance Mapper Engine_\n")

    print(f"Compliance gap report saved to {out_path}")
